// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MiniProject_UserManagement.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GroupPermission", b =>
                {
                    b.Property<int>("GroupListId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionListId")
                        .HasColumnType("int");

                    b.HasKey("GroupListId", "PermissionListId");

                    b.HasIndex("PermissionListId");

                    b.ToTable("GroupPermission");
                });

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.Property<int>("UserGroupsId")
                        .HasColumnType("int");

                    b.Property<int>("UserListId")
                        .HasColumnType("int");

                    b.HasKey("UserGroupsId", "UserListId");

                    b.HasIndex("UserListId");

                    b.ToTable("GroupUser");
                });

            modelBuilder.Entity("MiniProject_UserManagement.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin Group"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manager Group"
                        },
                        new
                        {
                            Id = 3,
                            Name = "User Group"
                        });
                });

            modelBuilder.Entity("MiniProject_UserManagement.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Full access to all features",
                            Name = "All Access"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Access to moderate features",
                            Name = "Moderate Access"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Limited access to basic features",
                            Name = "Minimal Access"
                        });
                });

            modelBuilder.Entity("MiniProject_UserManagement.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdNumber = "123456789",
                            Name = "Admin",
                            Surname = "Dude"
                        });
                });

            modelBuilder.Entity("GroupPermission", b =>
                {
                    b.HasOne("MiniProject_UserManagement.Models.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniProject_UserManagement.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.HasOne("MiniProject_UserManagement.Models.Group", null)
                        .WithMany()
                        .HasForeignKey("UserGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniProject_UserManagement.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
